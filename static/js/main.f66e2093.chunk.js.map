{"version":3,"sources":["reportWebVitals.js","app/components/card/Card.js","app/components/cardList/CardList.js","app/components/serachBox/SearchBox.js","app/components/scroll/Scroll.js","app/components/errorBoundary/ErrorBoundary.js","app/containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","id","name","email","className","alt","src","CardList","cardComponent","robots","map","user","SearchBox","onChange","searchChange","type","placeholder","Scroll","style","overflowY","border","height","position","children","ErrorBoundary","state","hasError","error","errorInfo","this","setState","Component","App","onSearchChanged","event","searchField","target","value","fetch","response","json","users","filterRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCMCQ,EAZF,SAACC,GAAW,IACZC,EAAoBD,EAApBC,GAAIC,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,MACnB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,mBACrB,gCACI,6BAAMC,IACN,4BAAKC,WCKNI,EAVE,SAAC,GAAc,IACtBC,EADqB,EAAZC,OACcC,KAAI,SAACC,GAC9B,OAAO,cAAC,EAAD,CAAoBV,GAAIU,EAAKV,GAAIC,KAAMS,EAAKT,KAAMC,MAAOQ,EAAKR,OAAnDQ,EAAKV,OAE3B,OACI,8BACMO,KCCCI,EARG,SAACZ,GACf,OACI,qBAAKI,UAAU,MAAf,SACI,uBAAOS,SAAUb,EAAMc,aAAcV,UAAU,mCAAmCW,KAAK,SAASC,YAAY,qBCKzGC,EARA,SAACjB,GACZ,OACI,qBAAKkB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,QAASC,SAAU,SAAxF,SACKtB,EAAMuB,YCmBJC,EAtBf,kDACI,WAAYxB,GAAQ,IAAD,8BACf,cAAMA,IACDyB,MAAQ,CACTC,UAAW,GAHA,EADvB,qDAQI,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,MATjC,oBAYI,WACI,OAAGG,KAAKJ,MAAMC,SACH,2DAGAG,KAAK7B,MAAMuB,aAjB9B,GAAmCQ,aCiDpBC,G,wDA3CX,WAAYhC,GAAQ,IAAD,8BACf,cAAMA,IAeViC,gBAAkB,SAACC,GACf,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAfzC,EAAKZ,MAAQ,CACThB,OAAQ,GACR0B,YAAa,IAJF,E,qDAQnB,WAAqB,IAAD,OAChBG,MAAM,8CAA8C7C,MAAK,SAAA8C,GACrD,OAAOA,EAASC,UACjB/C,MAAK,SAAAgD,GACJ,EAAKX,SAAS,CAACrB,OAAQgC,S,oBAQ/B,WAAU,IAAD,EACyBZ,KAAKJ,MAA5BhB,EADF,EACEA,OAAQ0B,EADV,EACUA,YACTO,EAAejC,EAAOkC,QAAO,SAAAC,GAC/B,OAAOA,EAAM1C,KAAK2C,cAAcC,SAASX,EAAYU,kBAEzD,OAAsB,IAAlBpC,EAAOsC,OACA,4CAGH,sBAAK3C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWU,aAAce,KAAKI,kBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUxB,OAAQiC,e,GAnC5BX,cCClBiB,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5B9D,M","file":"static/js/main.f66e2093.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nconst Card = (props) => {\r\n    const  { id, name, email } = props;  //or we can use Card = ({ id, name, email }) and delete this [const  { id, name, email } = props;]\r\n    return (\r\n        <div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${id}?size=200x200`} />\r\n            <div>\r\n                <h2>{ name }</h2>\r\n                <p>{ email }</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from \"../card/Card\";\r\n\r\nconst CardList = ({robots}) => {\r\n    const cardComponent = robots.map((user) => {\r\n        return <Card key={user.id} id={user.id} name={user.name} email={user.email}/>;\r\n    });\r\n    return (\r\n        <div>\r\n            { cardComponent }\r\n        </div>\r\n    );\r\n}\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = (props) => {\r\n    return (\r\n        <div className=\"pa2\">\r\n            <input onChange={props.searchChange} className=\"pa3 ba b--green bg-lightest-blue\" type=\"search\" placeholder=\"Search robots\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '5px solid black', height: '800px', position: 'fixed'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;\r\n","import React, { Component } from 'react';\r\n\r\nexport class ErrorBoundary extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError : false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({hasError: true});\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasError) {\r\n            return <h1> Oooops. That is not good</h1>;\r\n        }\r\n        else {\r\n            return this.props.children;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React, {Component} from 'react';\nimport CardList from \"../components/cardList/CardList\";\nimport SearchBox from \"../components/serachBox/SearchBox\";\nimport Scroll from \"../components/scroll/Scroll\";\nimport ErrorBoundary from \"../components/errorBoundary/ErrorBoundary\";\nimport \"./App.css\"\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            robots: [],\n            searchField: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users').then(response => {\n            return response.json();\n        }).then(users => {\n            this.setState({robots: users});\n        });\n    }\n\n    onSearchChanged = (event) => {\n        this.setState({searchField: event.target.value});\n    }\n\n    render() {\n        const {robots, searchField} = this.state;\n        const filterRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchField.toLowerCase())\n        });\n        if (robots.length === 0) {\n            return <h1>Loading...</h1>\n        } else {\n            return (\n                <div className=\"tc\">\n                    <h1 className='f1'>Robo Friends</h1>\n                    <SearchBox searchChange={this.onSearchChanged}/>\n                    <Scroll>\n                        <ErrorBoundary>\n                            <CardList robots={filterRobots}/>\n                        </ErrorBoundary>\n                    </Scroll>\n                </div>\n            );\n        }\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from \"./app/containers/App\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}